#cloud-config

packages:
  - pgbouncer
  - postgresql-client
  - etcd

write_files:
  - path: /tmp/setup-etcd.sh
    permissions: '0755'
    content: |
      #!/bin/bash
      HOSTNAME=$(hostname -s)
      IP=$(ip -4 addr show dev eth0 | awk '/inet /{print $2}' | cut -d/ -f1)
      cat > /etc/default/etcd <<'ETCDEOF'
      ETCD_NAME="${HOSTNAME}"
      ETCD_INITIAL_CLUSTER="pgpatroni-1=http://10.50.1.4:2380,pgpatroni-2=http://10.50.1.5:2380,pgpatroni-pgb-1=http://10.50.1.7:2380"
      ETCD_INITIAL_CLUSTER_STATE="new"
      ETCD_INITIAL_ADVERTISE_PEER_URLS="http://${IP}:2380"
      ETCD_ADVERTISE_CLIENT_URLS="http://${IP}:2379"
      ETCD_LISTEN_PEER_URLS="http://${IP}:2380"
      ETCD_LISTEN_CLIENT_URLS="http://127.0.0.1:2379,http://${IP}:2379"
      ETCDEOF
      sed -i "s/\${HOSTNAME}/${HOSTNAME}/g" /etc/default/etcd
      sed -i "s/\${IP}/${IP}/g" /etc/default/etcd
  - path: /etc/pgbouncer/pgbouncer.ini
    permissions: '0644'
    content: |
      [databases]
      postgres = host=10.50.1.10 port=5432 dbname=postgres
      * = host=10.50.1.10 port=5432
      [pgbouncer]
      listen_addr = 0.0.0.0
      listen_port = 6432
      pool_mode = transaction
      default_pool_size = 200
      max_client_conn = 2000
      ignore_startup_parameters = extra_float_digits
      auth_type = plain
      auth_file = /etc/pgbouncer/userlist.txt
      admin_users = pgbouncer
  - path: /etc/pgbouncer/userlist.txt
    permissions: '0640'
    content: |
      "pgbouncer" "StrongPass123"
      "postgres" "ChangeMe123Pass"

runcmd:
  - adduser --system --group --home /var/lib/pgbouncer pgbouncer || true
  - install -o pgbouncer -g pgbouncer -m 755 -d /run/pgbouncer /var/log/pgbouncer
  - |
    IP=$(ip -4 addr show dev eth0 | awk '/inet /{print $2}' | cut -d/ -f1)
    if [ "$IP" = "10.50.1.7" ]; then
      /tmp/setup-etcd.sh
      systemctl enable etcd
      systemctl restart etcd
    else
      systemctl stop etcd || true
      systemctl disable etcd || true
    fi
  - chown pgbouncer:pgbouncer /etc/pgbouncer/userlist.txt
  - chmod 640 /etc/pgbouncer/userlist.txt
  - chown -R pgbouncer:pgbouncer /etc/pgbouncer /var/log/pgbouncer /run/pgbouncer
  - tee /etc/systemd/system/pgbouncer.service >/dev/null <<'UNIT' 
      [Unit]
      Description=PgBouncer connection pooler
      After=network.target

      [Service]
      User=pgbouncer
      Group=pgbouncer
      Type=simple
      ExecStart=/usr/sbin/pgbouncer -q /etc/pgbouncer/pgbouncer.ini
      PIDFile=/run/pgbouncer/pgbouncer.pid
      RuntimeDirectory=pgbouncer
      RuntimeDirectoryMode=0755
      Restart=on-failure
      RestartSec=2

      [Install]
      WantedBy=multi-user.target
UNIT
  - systemctl daemon-reload
  - systemctl enable pgbouncer
  - |
    # PostgreSQL ILB'nin hazır olmasını bekle (en fazla 5 dakika)
    DB_ILB="10.50.1.10"
    echo "Waiting for PostgreSQL ILB ($DB_ILB) to be ready..."
    for i in {1..60}; do
      if timeout 2 bash -c "echo > /dev/tcp/$DB_ILB/5432" 2>/dev/null; then
        echo "PostgreSQL ILB is ready!"
        break
      fi
      if [ $i -eq 60 ]; then
        echo "WARNING: PostgreSQL ILB not ready after 5 minutes, continuing anyway..."
      fi
      sleep 5
    done
    # PgBouncer servisini başlat ve hazır olana kadar bekle
    systemctl start pgbouncer || true
    sleep 2
    # Servis başarısızsa retry (en fazla 10 deneme, 30 saniye)
    for i in {1..10}; do
      if systemctl is-active --quiet pgbouncer && ss -lntp | grep -q :6432; then
        echo "PgBouncer is active and listening on port 6432"
        break
      fi
      echo "PgBouncer retry attempt $i/10..."
      systemctl restart pgbouncer || true
      sleep 3
    done
    # Son kontrol ve gerekirse restart
    if ! systemctl is-active --quiet pgbouncer; then
      echo "WARNING: PgBouncer is not active, attempting final restart..."
      systemctl restart pgbouncer
      sleep 3
    fi
    # Port kontrolü
    if ! ss -lntp | grep -q :6432; then
      echo "ERROR: PgBouncer is not listening on port 6432"
      systemctl status pgbouncer --no-pager || true
      journalctl -u pgbouncer -n 20 --no-pager || true
    else
      echo "SUCCESS: PgBouncer is running and listening on port 6432"
      # Backend bağlantısını test et
      sleep 2
      if PGPASSWORD='ChangeMe123Pass' psql -h 127.0.0.1 -p 6432 -U postgres -d postgres -c "SELECT 1;" >/dev/null 2>&1; then
        echo "SUCCESS: PgBouncer can connect to backend PostgreSQL"
      else
        echo "WARNING: PgBouncer started but cannot connect to backend PostgreSQL yet"
        # Backend hazır olana kadar retry
        for retry in {1..20}; do
          sleep 3
          if PGPASSWORD='ChangeMe123Pass' psql -h 127.0.0.1 -p 6432 -U postgres -d postgres -c "SELECT 1;" >/dev/null 2>&1; then
            echo "SUCCESS: Backend connection established after retry"
            break
          fi
        done
      fi
    fi
