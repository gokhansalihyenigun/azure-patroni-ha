{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "region": {
      "type": "string",
      "defaultValue": "Germany West Central",
      "allowedValues": [
        "Germany West Central",
        "West Europe",
        "North Europe",
        "East US",
        "West US 2",
        "Central US",
        "East US 2",
        "West US 3",
        "Southeast Asia",
        "East Asia",
        "Japan East",
        "Japan West",
        "Australia East",
        "Australia Southeast",
        "Canada Central",
        "Canada East",
        "UK South",
        "UK West",
        "France Central",
        "France South",
        "Switzerland North",
        "Switzerland West",
        "Norway East",
        "Norway West",
        "Sweden Central",
        "Italy North",
        "Spain Central",
        "Poland Central",
        "South Africa North",
        "UAE North",
        "Brazil South",
        "Central India",
        "South India",
        "West India"
      ]
    },
    "prefix": {
      "type": "string",
      "defaultValue": "pgpatroni"
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser"
    },
    "adminPassword": {
      "type": "secureString",
      "defaultValue": "Azure123!@#"
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D32s_v6",
      "allowedValues": [
        "Standard_D2s_v6",
        "Standard_D4s_v6",
        "Standard_D8s_v6",
        "Standard_D16s_v6",
        "Standard_D32s_v6",
        "Standard_D2s_v5",
        "Standard_D4s_v5",
        "Standard_D8s_v5",
        "Standard_D16s_v5",
        "Standard_E4s_v5",
        "Standard_E8s_v5"
      ],
      "metadata": {
        "description": "Size of the database VMs (Standard_D32s_v6 - 32 vCPU, 128 GB RAM for maximum performance)"
      }
    },
    "numberOfNodes": {
      "type": "int",
      "defaultValue": 2,
      "allowedValues": [
        2,
        3
      ],
      "metadata": {
        "description": "Number of database nodes (2 or 3)"
      }
    },
    "dataDiskSizeGB": {
      "type": "int",
      "defaultValue": 1024
    },
    "walDiskSizeGB": {
      "type": "int",
      "defaultValue": 512
    },
    "diskSku": {
      "type": "string",
      "defaultValue": "PremiumV2_LRS",
      "allowedValues": [
        "PremiumV2_LRS",
        "Premium_LRS",
        "Premium_ZRS",
        "StandardSSD_LRS",
        "StandardSSD_ZRS",
        "UltraSSD_LRS"
      ],
      "metadata": {
        "description": "Managed disk SKU (PremiumV2_LRS recommended for best performance - highest IOPS and throughput)"
      }
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.50.0.0/16"
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.50.1.0/24"
    },
    "lbPrivateIP": {
      "type": "string",
      "defaultValue": "10.50.1.10"
    },
    "postgresPassword": {
      "type": "secureString",
      "defaultValue": "ChangeMe123Pass"
    },
    "replicatorPassword": {
      "type": "secureString",
      "defaultValue": "ChangeMe123Pass"
    },
    "enablePublicLB": {
      "type": "bool",
      "defaultValue": false
    },
    "enablePgBouncerTier": {
      "type": "bool",
      "defaultValue": true
    },
    "pgbouncerLbPrivateIP": {
      "type": "string",
      "defaultValue": "10.50.1.11"
    },
    "pgbouncerDefaultPool": {
      "type": "int",
      "defaultValue": 200
    },
    "pgbouncerMaxClientConn": {
      "type": "int",
      "defaultValue": 2000
    },
    "pgbouncerAdminUser": {
      "type": "string",
      "defaultValue": "pgbouncer"
    },
    "pgbouncerAdminPass": {
      "type": "secureString",
      "defaultValue": "StrongPass123"
    }
  },
  "variables": {
    "vnetName": "[format('{0}-vnet', parameters('prefix'))]",
    "subnetName": "db",
    "nsgName": "[format('{0}-nsg', parameters('prefix'))]",
    "natGatewayName": "[format('{0}-nat', parameters('prefix'))]",
    "publicIpName": "[format('{0}-nat-pip', parameters('prefix'))]",
    "ilbName": "[format('{0}-ilb', parameters('prefix'))]",
    "elbName": "[format('{0}-elb', parameters('prefix'))]",
    "pgbIlbName": "[format('{0}-pgb-ilb', parameters('prefix'))]",
    "bePoolName": "bepool",
    "pgbBePoolName": "pgb-bepool",
    "probeName": "patroniProbe",
    "pgbProbeName": "pgbProbe",
    "lbruleName": "pg",
    "pgbRuleName": "pgb",
    "vmNames": "[if(equals(parameters('numberOfNodes'), 2), createArray(format('{0}-1', parameters('prefix')), format('{0}-2', parameters('prefix'))), createArray(format('{0}-1', parameters('prefix')), format('{0}-2', parameters('prefix')), format('{0}-3', parameters('prefix'))))]",
    "vmIps": "[if(equals(parameters('numberOfNodes'), 2), createArray('10.50.1.4', '10.50.1.5'), createArray('10.50.1.4', '10.50.1.5', '10.50.1.6'))]",
    "vmZones": "[if(equals(parameters('numberOfNodes'), 2), createArray('1', '3'), createArray('1', '3', '1'))]",
    "pgbVmNames": [
      "[format('{0}-pgb-1', parameters('prefix'))]",
      "[format('{0}-pgb-2', parameters('prefix'))]"
    ],
    "pgbVmIps": [
      "10.50.1.7",
      "10.50.1.8"
    ],
    "pgbVmZones": [
      "1",
      "3"
    ],
    "cloudInitScript": "",
    "pgbCloudInitScript": "I2Nsb3VkLWNvbmZpZw0KDQpwYWNrYWdlczoNCiAgLSBwZ2JvdW5jZXINCiAgLSBwb3N0Z3Jlc3FsLWNsaWVudA0KICAtIGV0Y2QNCg0Kd3JpdGVfZmlsZXM6DQogIC0gcGF0aDogL3RtcC9zZXR1cC1ldGNkLnNoDQogICAgcGVybWlzc2lvbnM6ICcwNzU1Jw0KICAgIGNvbnRlbnQ6IHwNCiAgICAgICMhL2Jpbi9iYXNoDQogICAgICBIT1NUTkFNRT0kKGhvc3RuYW1lIC1zKQ0KICAgICAgSVA9JChpcCAtNCBhZGRyIHNob3cgZGV2IGV0aDAgfCBhd2sgJy9pbmV0IC97cHJpbnQgJDJ9JyB8IGN1dCAtZC8gLWYxKQ0KICAgICAgY2F0ID4gL2V0Yy9kZWZhdWx0L2V0Y2QgPDwnRVRDREVPRicNCiAgICAgIEVUQ0RfTkFNRT0iJHtIT1NUTkFNRX0iDQogICAgICBFVENEX0lOSVRJQUxfQ0xVU1RFUj0icGdwYXRyb25pLTE9aHR0cDovLzEwLjUwLjEuNDoyMzgwLHBncGF0cm9uaS0yPWh0dHA6Ly8xMC41MC4xLjU6MjM4MCxwZ3BhdHJvbmktcGdiLTE9aHR0cDovLzEwLjUwLjEuNzoyMzgwIg0KICAgICAgRVRDRF9JTklUSUFMX0NMVVNURVJfU1RBVEU9Im5ldyINCiAgICAgIEVUQ0RfSU5JVElBTF9BRFZFUlRJU0VfUEVFUl9VUkxTPSJodHRwOi8vJHtJUH06MjM4MCINCiAgICAgIEVUQ0RfQURWRVJUSVNFX0NMSUVOVF9VUkxTPSJodHRwOi8vJHtJUH06MjM3OSINCiAgICAgIEVUQ0RfTElTVEVOX1BFRVJfVVJMUz0iaHR0cDovLyR7SVB9OjIzODAiDQogICAgICBFVENEX0xJU1RFTl9DTElFTlRfVVJMUz0iaHR0cDovLzEyNy4wLjAuMToyMzc5LGh0dHA6Ly8ke0lQfToyMzc5Ig0KICAgICAgRVRDREVPRg0KICAgICAgc2VkIC1pICJzL1wke0hPU1ROQU1FfS8ke0hPU1ROQU1FfS9nIiAvZXRjL2RlZmF1bHQvZXRjZA0KICAgICAgc2VkIC1pICJzL1wke0lQfS8ke0lQfS9nIiAvZXRjL2RlZmF1bHQvZXRjZA0KICAtIHBhdGg6IC9ldGMvcGdib3VuY2VyL3BnYm91bmNlci5pbmkNCiAgICBwZXJtaXNzaW9uczogJzA2NDQnDQogICAgY29udGVudDogfA0KICAgICAgW2RhdGFiYXNlc10NCiAgICAgIHBvc3RncmVzID0gaG9zdD0xMC41MC4xLjEwIHBvcnQ9NTQzMiBkYm5hbWU9cG9zdGdyZXMNCiAgICAgICogPSBob3N0PTEwLjUwLjEuMTAgcG9ydD01NDMyDQogICAgICBbcGdib3VuY2VyXQ0KICAgICAgbGlzdGVuX2FkZHIgPSAwLjAuMC4wDQogICAgICBsaXN0ZW5fcG9ydCA9IDY0MzINCiAgICAgIHBvb2xfbW9kZSA9IHRyYW5zYWN0aW9uDQogICAgICBkZWZhdWx0X3Bvb2xfc2l6ZSA9IDIwMA0KICAgICAgbWF4X2NsaWVudF9jb25uID0gMjAwMA0KICAgICAgaWdub3JlX3N0YXJ0dXBfcGFyYW1ldGVycyA9IGV4dHJhX2Zsb2F0X2RpZ2l0cw0KICAgICAgYXV0aF90eXBlID0gcGxhaW4NCiAgICAgIGF1dGhfZmlsZSA9IC9ldGMvcGdib3VuY2VyL3VzZXJsaXN0LnR4dA0KICAgICAgYWRtaW5fdXNlcnMgPSBwZ2JvdW5jZXINCiAgLSBwYXRoOiAvZXRjL3BnYm91bmNlci91c2VybGlzdC50eHQNCiAgICBwZXJtaXNzaW9uczogJzA2NDAnDQogICAgY29udGVudDogfA0KICAgICAgInBnYm91bmNlciIgIlN0cm9uZ1Bhc3MxMjMiDQogICAgICAicG9zdGdyZXMiICJDaGFuZ2VNZTEyM1Bhc3MiDQoNCnJ1bmNtZDoNCiAgLSBhZGR1c2VyIC0tc3lzdGVtIC0tZ3JvdXAgLS1ob21lIC92YXIvbGliL3BnYm91bmNlciBwZ2JvdW5jZXIgfHwgdHJ1ZQ0KICAtIGluc3RhbGwgLW8gcGdib3VuY2VyIC1nIHBnYm91bmNlciAtbSA3NTUgLWQgL3J1bi9wZ2JvdW5jZXIgL3Zhci9sb2cvcGdib3VuY2VyDQogIC0gfA0KICAgIElQPSQoaXAgLTQgYWRkciBzaG93IGRldiBldGgwIHwgYXdrICcvaW5ldCAve3ByaW50ICQyfScgfCBjdXQgLWQvIC1mMSkNCiAgICBpZiBbICIkSVAiID0gIjEwLjUwLjEuNyIgXTsgdGhlbg0KICAgICAgL3RtcC9zZXR1cC1ldGNkLnNoDQogICAgICBzeXN0ZW1jdGwgZW5hYmxlIGV0Y2QNCiAgICAgIHN5c3RlbWN0bCByZXN0YXJ0IGV0Y2QNCiAgICBlbHNlDQogICAgICBzeXN0ZW1jdGwgc3RvcCBldGNkIHx8IHRydWUNCiAgICAgIHN5c3RlbWN0bCBkaXNhYmxlIGV0Y2QgfHwgdHJ1ZQ0KICAgIGZpDQogIC0gY2hvd24gcGdib3VuY2VyOnBnYm91bmNlciAvZXRjL3BnYm91bmNlci91c2VybGlzdC50eHQNCiAgLSBjaG1vZCA2NDAgL2V0Yy9wZ2JvdW5jZXIvdXNlcmxpc3QudHh0DQogIC0gY2hvd24gLVIgcGdib3VuY2VyOnBnYm91bmNlciAvZXRjL3BnYm91bmNlciAvdmFyL2xvZy9wZ2JvdW5jZXIgL3J1bi9wZ2JvdW5jZXINCiAgLSB0ZWUgL2V0Yy9zeXN0ZW1kL3N5c3RlbS9wZ2JvdW5jZXIuc2VydmljZSA+L2Rldi9udWxsIDw8J1VOSVQnIA0KICAgICAgW1VuaXRdDQogICAgICBEZXNjcmlwdGlvbj1QZ0JvdW5jZXIgY29ubmVjdGlvbiBwb29sZXINCiAgICAgIEFmdGVyPW5ldHdvcmsudGFyZ2V0DQoNCiAgICAgIFtTZXJ2aWNlXQ0KICAgICAgVXNlcj1wZ2JvdW5jZXINCiAgICAgIEdyb3VwPXBnYm91bmNlcg0KICAgICAgVHlwZT1zaW1wbGUNCiAgICAgIEV4ZWNTdGFydD0vdXNyL3NiaW4vcGdib3VuY2VyIC1xIC9ldGMvcGdib3VuY2VyL3BnYm91bmNlci5pbmkNCiAgICAgIFBJREZpbGU9L3J1bi9wZ2JvdW5jZXIvcGdib3VuY2VyLnBpZA0KICAgICAgUnVudGltZURpcmVjdG9yeT1wZ2JvdW5jZXINCiAgICAgIFJ1bnRpbWVEaXJlY3RvcnlNb2RlPTA3NTUNCiAgICAgIFJlc3RhcnQ9b24tZmFpbHVyZQ0KICAgICAgUmVzdGFydFNlYz0yDQoNCiAgICAgIFtJbnN0YWxsXQ0KICAgICAgV2FudGVkQnk9bXVsdGktdXNlci50YXJnZXQNClVOSVQNCiAgLSBzeXN0ZW1jdGwgZGFlbW9uLXJlbG9hZA0KICAtIHN5c3RlbWN0bCBlbmFibGUgLS1ub3cgcGdib3VuY2VyDQo="
  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-11-01",
      "name": "[variables('publicIpName')]",
      "location": "[parameters('region')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4"
      }
    },
    {
      "type": "Microsoft.Network/natGateways",
      "apiVersion": "2023-11-01",
      "name": "[variables('natGatewayName')]",
      "location": "[parameters('region')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIpAddresses": [
          {
            "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
          }
        ],
        "idleTimeoutInMinutes": 4
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-11-01",
      "name": "[variables('vnetName')]",
      "location": "[parameters('region')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]",
              "natGateway": {
                "id": "[resourceId('Microsoft.Network/natGateways', variables('natGatewayName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/natGateways', variables('natGatewayName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-11-01",
      "name": "[variables('nsgName')]",
      "location": "[parameters('region')]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "priority": 100,
              "access": "Allow",
              "protocol": "Tcp",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22"
            }
          },
          {
            "name": "pg-azurelb-8008",
            "properties": {
              "priority": 105,
              "access": "Allow",
              "protocol": "Tcp",
              "direction": "Inbound",
              "sourceAddressPrefix": "AzureLoadBalancer",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "8008"
            }
          },
          {
            "name": "postgres",
            "properties": {
              "priority": 110,
              "access": "Allow",
              "protocol": "Tcp",
              "direction": "Inbound",
              "sourceAddressPrefix": "10.50.0.0/16",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "5432"
            }
          },
          {
            "name": "pgbouncer",
            "properties": {
              "priority": 115,
              "access": "Allow",
              "protocol": "Tcp",
              "direction": "Inbound",
              "sourceAddressPrefix": "10.50.0.0/16",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "6432"
            }
          },
          {
            "name": "pgb-azurelb-6432",
            "properties": {
              "priority": 116,
              "access": "Allow",
              "protocol": "Tcp",
              "direction": "Inbound",
              "sourceAddressPrefix": "AzureLoadBalancer",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "6432"
            }
          },
          {
            "name": "patroni",
            "properties": {
              "priority": 120,
              "access": "Allow",
              "protocol": "Tcp",
              "direction": "Inbound",
              "sourceAddressPrefix": "10.50.0.0/16",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "8008"
            }
          },
          {
            "name": "etcd",
            "properties": {
              "priority": 130,
              "access": "Allow",
              "protocol": "Tcp",
              "direction": "Inbound",
              "sourceAddressPrefix": "10.50.0.0/16",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "2379-2380"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2023-11-01",
      "name": "[variables('ilbName')]",
      "location": "[parameters('region')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "fe",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]"
              },
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('lbPrivateIP')]"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('bePoolName')]"
          }
        ],
        "probes": [
          {
            "name": "[variables('probeName')]",
            "properties": {
              "protocol": "Http",
              "port": 8008,
              "requestPath": "/primary",
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "[variables('lbruleName')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('ilbName'), 'fe')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('ilbName'), variables('bePoolName'))]"
              },
              "protocol": "Tcp",
              "frontendPort": 5432,
              "backendPort": 5432,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 30,
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('ilbName'), variables('probeName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-11-01",
      "name": "[format('{0}-elb-pip', parameters('prefix'))]",
      "location": "[parameters('region')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      },
      "condition": "[parameters('enablePublicLB')]"
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2023-11-01",
      "name": "[variables('elbName')]",
      "location": "[parameters('region')]",
      "sku": {
        "name": "Standard"
      },
      "condition": "[parameters('enablePublicLB')]",
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "fe",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-elb-pip', parameters('prefix')))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('bePoolName')]"
          }
        ],
        "probes": [
          {
            "name": "[variables('probeName')]",
            "properties": {
              "protocol": "Http",
              "port": 8008,
              "requestPath": "/primary",
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "[variables('lbruleName')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('elbName'), 'fe')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('ilbName'), variables('bePoolName'))]"
              },
              "protocol": "Tcp",
              "frontendPort": 5432,
              "backendPort": 5432,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 30,
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('ilbName'), variables('probeName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/loadBalancers', variables('ilbName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2023-11-01",
      "name": "[variables('pgbIlbName')]",
      "location": "[parameters('region')]",
      "sku": {
        "name": "Standard"
      },
      "condition": "[parameters('enablePgBouncerTier')]",
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "fe",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]"
              },
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('pgbouncerLbPrivateIP')]"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('pgbBePoolName')]"
          }
        ],
        "probes": [
          {
            "name": "[variables('pgbProbeName')]",
            "properties": {
              "protocol": "Tcp",
              "port": 6432,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "[variables('pgbRuleName')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('pgbIlbName'), 'fe')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('pgbIlbName'), variables('pgbBePoolName'))]"
              },
              "protocol": "Tcp",
              "frontendPort": 6432,
              "backendPort": 6432,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 30,
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('pgbIlbName'), variables('pgbProbeName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-11-01",
      "name": "[format('{0}-nic', variables('vmNames')[copyIndex()])]",
      "location": "[parameters('region')]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfNodes')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]"
              },
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('vmIps')[copyIndex()]]",
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('ilbName'), variables('bePoolName'))]"
                }
              ]
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
        "[resourceId('Microsoft.Network/loadBalancers', variables('ilbName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-11-01",
      "name": "[format('{0}-nic', variables('pgbVmNames')[copyIndex()])]",
      "location": "[parameters('region')]",
      "condition": "[parameters('enablePgBouncerTier')]",
      "copy": {
        "name": "pgbNicLoop",
        "count": 2
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]"
              },
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('pgbVmIps')[copyIndex()]]",
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('pgbIlbName'), variables('pgbBePoolName'))]"
                }
              ]
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
        "[resourceId('Microsoft.Network/loadBalancers', variables('pgbIlbName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-11-01",
      "name": "[variables('vmNames')[copyIndex()]]",
      "location": "[parameters('region')]",
      "zones": [
        "[variables('vmZones')[copyIndex()]]"
      ],
      "copy": {
        "name": "vmLoop",
        "count": "[parameters('numberOfNodes')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmNames')[copyIndex()]]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false
          },
          "customData": "[variables('cloudInitScript')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "0001-com-ubuntu-server-jammy",
            "sku": "22_04-lts-gen2",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            }
          },
          "dataDisks": [
            {
              "lun": 0,
              "createOption": "Empty",
              "diskSizeGB": "[parameters('dataDiskSizeGB')]",
              "managedDisk": {
                "storageAccountType": "[parameters('diskSku')]"
              }
            },
            {
              "lun": 1,
              "createOption": "Empty",
              "diskSizeGB": "[parameters('walDiskSizeGB')]",
              "managedDisk": {
                "storageAccountType": "[parameters('diskSku')]"
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmNames')[copyIndex()]))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmNames')[copyIndex()]))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-11-01",
      "name": "[variables('pgbVmNames')[copyIndex()]]",
      "location": "[parameters('region')]",
      "zones": [
        "[variables('pgbVmZones')[copyIndex()]]"
      ],
      "condition": "[parameters('enablePgBouncerTier')]",
      "copy": {
        "name": "pgbVmLoop",
        "count": 2
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D16s_v6"
        },
        "osProfile": {
          "computerName": "[variables('pgbVmNames')[copyIndex()]]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false
          },
          "customData": "[variables('pgbCloudInitScript')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "0001-com-ubuntu-server-jammy",
            "sku": "22_04-lts-gen2",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            }
          }
        },
        "hyperVGeneration": "V2",
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('pgbVmNames')[copyIndex()]))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('pgbVmNames')[copyIndex()]))]"
      ]
    }
  ],
  "outputs": {
    "dbIlbIP": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/loadBalancers', variables('ilbName'))).frontendIPConfigurations[0].properties.privateIPAddress]"
    },
    "elbIP": {
      "type": "string",
      "value": "[if(parameters('enablePublicLB'), reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}-elb-pip', parameters('prefix')))).ipAddress, 'disabled')]"
    },
    "pgbIlbIP": {
      "type": "string",
      "value": "[if(parameters('enablePgBouncerTier'), reference(resourceId('Microsoft.Network/loadBalancers', variables('pgbIlbName'))).frontendIPConfigurations[0].properties.privateIPAddress, 'disabled')]"
    }
  }
}