{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "region": {
      "type": "string",
      "defaultValue": "Germany West Central",
      "allowedValues": [
        "Germany West Central",
        "West Europe",
        "North Europe",
        "East US",
        "West US 2",
        "Central US",
        "East US 2",
        "West US 3",
        "Southeast Asia",
        "East Asia",
        "Japan East",
        "Japan West",
        "Australia East",
        "Australia Southeast",
        "Canada Central",
        "Canada East",
        "UK South",
        "UK West",
        "France Central",
        "France South",
        "Switzerland North",
        "Switzerland West",
        "Norway East",
        "Norway West",
        "Sweden Central",
        "Italy North",
        "Spain Central",
        "Poland Central",
        "South Africa North",
        "UAE North",
        "Brazil South",
        "Central India",
        "South India",
        "West India"
      ]
    },
    "prefix": {
      "type": "string",
      "defaultValue": "pgpatroni"
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser"
    },
    "adminPassword": {
      "type": "secureString",
      "defaultValue": "Azure123!@#"
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D4s_v5",
      "allowedValues": [
        "Standard_D2s_v5",
        "Standard_D4s_v5",
        "Standard_D8s_v5",
        "Standard_D16s_v5",
        "Standard_E4s_v5",
        "Standard_E8s_v5"
      ],
      "metadata": {
        "description": "Size of the database VMs"
      }
    },
    "numberOfNodes": {
      "type": "int",
      "defaultValue": 2,
      "allowedValues": [
        2,
        3
      ],
      "metadata": {
        "description": "Number of database nodes (2 or 3)"
      }
    },
    "dataDiskSizeGB": {
      "type": "int",
      "defaultValue": 1024
    },
    "walDiskSizeGB": {
      "type": "int",
      "defaultValue": 512
    },
    "diskSku": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "allowedValues": [
        "Premium_LRS",
        "Premium_ZRS",
        "StandardSSD_LRS",
        "StandardSSD_ZRS",
        "UltraSSD_LRS"
      ],
      "metadata": {
        "description": "Managed disk SKU"
      }
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.50.0.0/16"
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.50.1.0/24"
    },
    "lbPrivateIP": {
      "type": "string",
      "defaultValue": "10.50.1.10"
    },
    "postgresPassword": {
      "type": "secureString",
      "defaultValue": "ChangeMe123Pass"
    },
    "replicatorPassword": {
      "type": "secureString",
      "defaultValue": "ChangeMe123Pass"
    },
    "enablePublicLB": {
      "type": "bool",
      "defaultValue": false
    },
    "enablePgBouncerTier": {
      "type": "bool",
      "defaultValue": true
    },
    "pgbouncerLbPrivateIP": {
      "type": "string",
      "defaultValue": "10.50.1.11"
    },
    "pgbouncerDefaultPool": {
      "type": "int",
      "defaultValue": 200
    },
    "pgbouncerMaxClientConn": {
      "type": "int",
      "defaultValue": 2000
    },
    "pgbouncerAdminUser": {
      "type": "string",
      "defaultValue": "pgbouncer"
    },
    "pgbouncerAdminPass": {
      "type": "secureString",
      "defaultValue": "StrongPass123"
    }
  },
  "variables": {
    "vnetName": "[format('{0}-vnet', parameters('prefix'))]",
    "subnetName": "db",
    "nsgName": "[format('{0}-nsg', parameters('prefix'))]",
    "natGatewayName": "[format('{0}-nat', parameters('prefix'))]",
    "publicIpName": "[format('{0}-nat-pip', parameters('prefix'))]",
    "ilbName": "[format('{0}-ilb', parameters('prefix'))]",
    "elbName": "[format('{0}-elb', parameters('prefix'))]",
    "pgbIlbName": "[format('{0}-pgb-ilb', parameters('prefix'))]",
    "bePoolName": "bepool",
    "pgbBePoolName": "pgb-bepool",
    "probeName": "patroniProbe",
    "pgbProbeName": "pgbProbe",
    "lbruleName": "pg",
    "pgbRuleName": "pgb",
    "vmNames": "[if(equals(parameters('numberOfNodes'), 2), createArray(format('{0}-1', parameters('prefix')), format('{0}-2', parameters('prefix'))), createArray(format('{0}-1', parameters('prefix')), format('{0}-2', parameters('prefix')), format('{0}-3', parameters('prefix'))))]",
    "vmIps": "[if(equals(parameters('numberOfNodes'), 2), createArray('10.50.1.4', '10.50.1.5'), createArray('10.50.1.4', '10.50.1.5', '10.50.1.6'))]",
    "vmZones": "[if(equals(parameters('numberOfNodes'), 2), createArray('1', '3'), createArray('1', '3', '1'))]",
    "pgbVmNames": [
      "[format('{0}-pgb-1', parameters('prefix'))]",
      "[format('{0}-pgb-2', parameters('prefix'))]"
    ],
    "pgbVmIps": [
      "10.50.1.7",
      "10.50.1.8"
    ],
    "pgbVmZones": [
      "1",
      "3"
    ],
    "cloudInitScript": "I2Nsb3VkLWNvbmZpZw0KDQpwYWNrYWdlczoNCiAgLSBqcQ0KICAtIGN1cmwNCiAgLSBnbnVwZw0KICAtIGxzYi1yZWxlYXNlDQogIC0gcHl0aG9uMy1waXANCiAgLSBldGNkDQoNCndyaXRlX2ZpbGVzOg0KICAtIHBhdGg6IC90bXAvc2V0dXAtZXRjZC5zaA0KICAgIHBlcm1pc3Npb25zOiAnMDc1NScNCiAgICBjb250ZW50OiB8DQogICAgICAjIS9iaW4vYmFzaA0KICAgICAgSE9TVE5BTUU9JChob3N0bmFtZSAtcykNCiAgICAgIElQPSQoaXAgLTQgYWRkciBzaG93IGRldiBldGgwIHwgYXdrICcvaW5ldCAve3ByaW50ICQyfScgfCBjdXQgLWQvIC1mMSkNCiAgICAgIGNhdCA+IC9ldGMvZGVmYXVsdC9ldGNkIDw8J0VUQ0RFT0YnDQogICAgICBFVENEX05BTUU9IiR7SE9TVE5BTUV9Ig0KICAgICAgRVRDRF9JTklUSUFMX0NMVVNURVI9InBncGF0cm9uaS0xPWh0dHA6Ly8xMC41MC4xLjQ6MjM4MCxwZ3BhdHJvbmktMj1odHRwOi8vMTAuNTAuMS41OjIzODAiDQogICAgICBFVENEX0lOSVRJQUxfQ0xVU1RFUl9TVEFURT0ibmV3Ig0KICAgICAgRVRDRF9JTklUSUFMX0FEVkVSVElTRV9QRUVSX1VSTFM9Imh0dHA6Ly8ke0lQfToyMzgwIg0KICAgICAgRVRDRF9BRFZFUlRJU0VfQ0xJRU5UX1VSTFM9Imh0dHA6Ly8ke0lQfToyMzc5Ig0KICAgICAgRVRDRF9MSVNURU5fUEVFUl9VUkxTPSJodHRwOi8vJHtJUH06MjM4MCINCiAgICAgIEVUQ0RfTElTVEVOX0NMSUVOVF9VUkxTPSJodHRwOi8vMTI3LjAuMC4xOjIzNzksaHR0cDovLyR7SVB9OjIzNzkiDQogICAgICBFVENERU9GDQogICAgICBzZWQgLWkgInMvXCR7SE9TVE5BTUV9LyR7SE9TVE5BTUV9L2ciIC9ldGMvZGVmYXVsdC9ldGNkDQogICAgICBzZWQgLWkgInMvXCR7SVB9LyR7SVB9L2ciIC9ldGMvZGVmYXVsdC9ldGNkDQogIA0KICAtIHBhdGg6IC90bXAvc2V0dXAtcGF0cm9uaS5zaA0KICAgIHBlcm1pc3Npb25zOiAnMDc1NScNCiAgICBjb250ZW50OiB8DQogICAgICAjIS9iaW4vYmFzaA0KICAgICAgSE9TVE5BTUU9JChob3N0bmFtZSAtcykNCiAgICAgIElQPSQoaXAgLTQgYWRkciBzaG93IGRldiBldGgwIHwgYXdrICcvaW5ldCAve3ByaW50ICQyfScgfCBjdXQgLWQvIC1mMSkNCiAgICAgIGNhdCA+IC9ldGMvcGF0cm9uaS9wYXRyb25pLnltbCA8PCdQQVRST05JRU9GJw0KICAgICAgc2NvcGU6IHBnLWhhDQogICAgICBuYW1lc3BhY2U6IC9zZXJ2aWNlLw0KICAgICAgbmFtZTogX19IT1NUTkFNRV9fDQogICAgICByZXN0YXBpOg0KICAgICAgICBsaXN0ZW46IDAuMC4wLjA6ODAwOA0KICAgICAgICBjb25uZWN0X2FkZHJlc3M6IF9fSVBfXzo4MDA4DQogICAgICBldGNkOg0KICAgICAgICBob3N0czogMTAuNTAuMS40OjIzNzksMTAuNTAuMS41OjIzNzkNCiAgICAgIGJvb3RzdHJhcDoNCiAgICAgICAgZGNzOg0KICAgICAgICAgIHR0bDogMjANCiAgICAgICAgICBsb29wX3dhaXQ6IDUNCiAgICAgICAgICByZXRyeV90aW1lb3V0OiA1DQogICAgICAgICAgbWF4aW11bV9sYWdfb25fZmFpbG92ZXI6IDEwNDg1NzYNCiAgICAgICAgICBzeW5jaHJvbm91c19tb2RlOiB0cnVlDQogICAgICAgICAgc3luY2hyb25vdXNfbW9kZV9zdHJpY3Q6IGZhbHNlDQogICAgICAgICAgc3luY2hyb25vdXNfbm9kZV9jb3VudDogMQ0KICAgICAgICAgIHBvc3RncmVzcWw6DQogICAgICAgICAgICBwYXJhbWV0ZXJzOg0KICAgICAgICAgICAgICB3YWxfbGV2ZWw6IGxvZ2ljYWwNCiAgICAgICAgICAgICAgbWF4X3dhbF9zZW5kZXJzOiAyMA0KICAgICAgICAgICAgICBtYXhfcmVwbGljYXRpb25fc2xvdHM6IDIwDQogICAgICAgICAgICAgIHNoYXJlZF9idWZmZXJzOiA0R0INCiAgICAgICAgICAgICAgZWZmZWN0aXZlX2NhY2hlX3NpemU6IDhHQg0KICAgICAgICAgICAgICBtYWludGVuYW5jZV93b3JrX21lbTogMUdCDQogICAgICAgICAgICAgIHdvcmtfbWVtOiA2NE1CDQogICAgICAgICAgICAgIGNoZWNrcG9pbnRfdGltZW91dDogMTBtaW4NCiAgICAgICAgICAgICAgc3luY2hyb25vdXNfY29tbWl0OiBvbg0KICAgICAgICAgICAgdXNlX3Nsb3RzOiB0cnVlDQogICAgICAgICAgICB1c2VfcGdfcmV3aW5kOiB0cnVlDQogICAgICAgIGluaXRkYjoNCiAgICAgICAgICAtIGVuY29kaW5nOiBVVEY4DQogICAgICAgICAgLSBkYXRhLWNoZWNrc3Vtcw0KICAgICAgICBwZ19oYmE6DQogICAgICAgICAgLSBob3N0IHJlcGxpY2F0aW9uIHJlcGxpY2F0b3IgMTAuNTAuMC4wLzE2IG1kNQ0KICAgICAgICAgIC0gaG9zdCBhbGwgYWxsIDEwLjUwLjAuMC8xNiBtZDUNCiAgICAgICAgdXNlcnM6DQogICAgICAgICAgcmVwbGljYXRvcjoNCiAgICAgICAgICAgIHBhc3N3b3JkOiBDaGFuZ2VNZTEyM1Bhc3MNCiAgICAgICAgICAgIG9wdGlvbnM6DQogICAgICAgICAgICAgIC0gcmVwbGljYXRpb24NCiAgICAgIHBvc3RncmVzcWw6DQogICAgICAgIGxpc3RlbjogMC4wLjAuMDo1NDMyDQogICAgICAgIGNvbm5lY3RfYWRkcmVzczogX19JUF9fOjU0MzINCiAgICAgICAgZGF0YV9kaXI6IC9wZ2RhdGENCiAgICAgICAgYmluX2RpcjogL3Vzci9saWIvcG9zdGdyZXNxbC8xNi9iaW4NCiAgICAgICAgcGFyYW1ldGVyczoge30NCiAgICAgICAgYXV0aGVudGljYXRpb246DQogICAgICAgICAgc3VwZXJ1c2VyOg0KICAgICAgICAgICAgdXNlcm5hbWU6IHBvc3RncmVzDQogICAgICAgICAgICBwYXNzd29yZDogQ2hhbmdlTWUxMjNQYXNzDQogICAgICAgICAgcmVwbGljYXRpb246DQogICAgICAgICAgICB1c2VybmFtZTogcmVwbGljYXRvcg0KICAgICAgICAgICAgcGFzc3dvcmQ6IENoYW5nZU1lMTIzUGFzcw0KICAgICAgdGFnczoNCiAgICAgICAgbm9mYWlsb3ZlcjogZmFsc2UNCiAgICAgICAgbm9sb2FkYmFsYW5jZTogZmFsc2UNCiAgICAgICAgY2xvbmVmcm9tOiBmYWxzZQ0KICAgICAgUEFUUk9OSUVPRg0KICAgICAgc2VkIC1pICJzL19fSE9TVE5BTUVfXy8ke0hPU1ROQU1FfS9nIiAvZXRjL3BhdHJvbmkvcGF0cm9uaS55bWwNCiAgICAgIHNlZCAtaSAicy9fX0lQX18vJHtJUH0vZyIgL2V0Yy9wYXRyb25pL3BhdHJvbmkueW1sDQogICAgICBjaG93biBwb3N0Z3Jlczpwb3N0Z3JlcyAvZXRjL3BhdHJvbmkvcGF0cm9uaS55bWwNCiAgDQogIC0gcGF0aDogL2V0Yy9zeXN0ZW1kL3N5c3RlbS9wYXRyb25pLnNlcnZpY2UNCiAgICBwZXJtaXNzaW9uczogJzA2NDQnDQogICAgY29udGVudDogfA0KICAgICAgW1VuaXRdDQogICAgICBEZXNjcmlwdGlvbj1QYXRyb25pIFBvc3RncmVTUUwgSEENCiAgICAgIEFmdGVyPW5ldHdvcmsudGFyZ2V0IGV0Y2Quc2VydmljZQ0KICAgICAgDQogICAgICBbU2VydmljZV0NCiAgICAgIFR5cGU9c2ltcGxlDQogICAgICBVc2VyPXBvc3RncmVzDQogICAgICBHcm91cD1wb3N0Z3Jlcw0KICAgICAgRXhlY1N0YXJ0PS91c3IvbG9jYWwvYmluL3BhdHJvbmkgL2V0Yy9wYXRyb25pL3BhdHJvbmkueW1sDQogICAgICBSZXN0YXJ0PW9uLWZhaWx1cmUNCiAgICAgIFJlc3RhcnRTZWM9NQ0KICAgICAgTGltaXROT0ZJTEU9MTAwMDAwDQogICAgICANCiAgICAgIFtJbnN0YWxsXQ0KICAgICAgV2FudGVkQnk9bXVsdGktdXNlci50YXJnZXQNCg0KcnVuY21kOg0KICAtIGN1cmwgLWZzU0wgaHR0cHM6Ly93d3cucG9zdGdyZXNxbC5vcmcvbWVkaWEva2V5cy9BQ0NDNENGOC5hc2MgfCBncGcgLS1kZWFybW9yIC1vIC91c3Ivc2hhcmUva2V5cmluZ3MvcGcuZ3BnDQogIC0gZWNobyAiZGViIFtzaWduZWQtYnk9L3Vzci9zaGFyZS9rZXlyaW5ncy9wZy5ncGddIGh0dHA6Ly9hcHQucG9zdGdyZXNxbC5vcmcvcHViL3JlcG9zL2FwdCAkKGxzYl9yZWxlYXNlIC1jcyktcGdkZyBtYWluIiA+IC9ldGMvYXB0L3NvdXJjZXMubGlzdC5kL3BnLmxpc3QNCiAgLSBhcHQtZ2V0IHVwZGF0ZQ0KICAtIGFwdC1nZXQgaW5zdGFsbCAteSBwb3N0Z3Jlc3FsLTE2IHB5dGhvbjMtcHN5Y29wZzINCiAgLSBzeXNjdGwgLXcgdm0uc3dhcHBpbmVzcz0xDQogIC0gc3lzY3RsIC13IHZtLm1heF9tYXBfY291bnQ9MjYyMTQ0DQogIC0gfA0KICAgIERJU0tfREFUQT0vZGV2L2Rpc2svYXp1cmUvc2NzaTEvbHVuMA0KICAgIGlmIFsgLWIgIiRESVNLX0RBVEEiIF07IHRoZW4NCiAgICAgIHBhcnRlZCAtcyAke0RJU0tfREFUQX0gbWtsYWJlbCBncHQgbWtwYXJ0IHByaW1hcnkgZXh0NCAxTWlCIDEwMCUNCiAgICAgIHNsZWVwIDMNCiAgICAgIG1rZnMuZXh0NCAtRiAke0RJU0tfREFUQX0xDQogICAgICBta2RpciAtcCAvcGdkYXRhDQogICAgICBlY2hvICIke0RJU0tfREFUQX0xIC9wZ2RhdGEgZXh0NCBkZWZhdWx0cyxub2F0aW1lIDAgMiIgPj4gL2V0Yy9mc3RhYg0KICAgICAgbW91bnQgLWENCiAgICAgIGNobW9kIDcwMCAvcGdkYXRhDQogICAgICBjaG93biAtUiBwb3N0Z3Jlczpwb3N0Z3JlcyAvcGdkYXRhDQogICAgZmkNCiAgLSB8DQogICAgRElTS19XQUw9L2Rldi9kaXNrL2F6dXJlL3Njc2kxL2x1bjENCiAgICBpZiBbIC1iICIkRElTS19XQUwiIF07IHRoZW4NCiAgICAgIHBhcnRlZCAtcyAke0RJU0tfV0FMfSBta2xhYmVsIGdwdCBta3BhcnQgcHJpbWFyeSBleHQ0IDFNaUIgMTAwJQ0KICAgICAgc2xlZXAgMw0KICAgICAgbWtmcy5leHQ0IC1GICR7RElTS19XQUx9MQ0KICAgICAgbWtkaXIgLXAgL3Bnd2FsDQogICAgICBlY2hvICIke0RJU0tfV0FMfTEgL3Bnd2FsIGV4dDQgZGVmYXVsdHMsbm9hdGltZSAwIDIiID4+IC9ldGMvZnN0YWINCiAgICAgIG1vdW50IC1hDQogICAgICBjaG1vZCA3MDAgL3Bnd2FsDQogICAgICBjaG93biAtUiBwb3N0Z3Jlczpwb3N0Z3JlcyAvcGd3YWwNCiAgICBmaQ0KICAtIC90bXAvc2V0dXAtZXRjZC5zaA0KICAtIHN5c3RlbWN0bCBzdG9wIHBvc3RncmVzcWwgfHwgdHJ1ZQ0KICAtIHN5c3RlbWN0bCBkaXNhYmxlIHBvc3RncmVzcWwgfHwgdHJ1ZQ0KICAtIHN5c3RlbWN0bCBlbmFibGUgZXRjZA0KICAtIHN5c3RlbWN0bCByZXN0YXJ0IGV0Y2QNCiAgLSBzbGVlcCAxMA0KICAtIHBpcDMgaW5zdGFsbCBwYXRyb25pW2V0Y2RdIHJlcXVlc3RzDQogIC0gbWtkaXIgLXAgL2V0Yy9wYXRyb25pDQogIC0gL3RtcC9zZXR1cC1wYXRyb25pLnNoDQogIC0gc3lzdGVtY3RsIGRhZW1vbi1yZWxvYWQNCiAgLSBzeXN0ZW1jdGwgZW5hYmxlIHBhdHJvbmkNCiAgLSBzeXN0ZW1jdGwgc3RhcnQgcGF0cm9uaQ0KDQo=",
    "pgbCloudInitScript": "I2Nsb3VkLWNvbmZpZw0KDQpwYWNrYWdlczoNCiAgLSBwZ2JvdW5jZXINCiAgLSBwb3N0Z3Jlc3FsLWNsaWVudA0KDQp3cml0ZV9maWxlczoNCiAgLSBwYXRoOiAvZXRjL3BnYm91bmNlci9wZ2JvdW5jZXIuaW5pDQogICAgcGVybWlzc2lvbnM6ICcwNjQ0Jw0KICAgIGNvbnRlbnQ6IHwNCiAgICAgIFtkYXRhYmFzZXNdDQogICAgICBwb3N0Z3JlcyA9IGhvc3Q9MTAuNTAuMS4xMCBwb3J0PTU0MzIgZGJuYW1lPXBvc3RncmVzDQogICAgICAqID0gaG9zdD0xMC41MC4xLjEwIHBvcnQ9NTQzMg0KICAgICAgW3BnYm91bmNlcl0NCiAgICAgIGxpc3Rlbl9hZGRyID0gMC4wLjAuMA0KICAgICAgbGlzdGVuX3BvcnQgPSA2NDMyDQogICAgICBwb29sX21vZGUgPSB0cmFuc2FjdGlvbg0KICAgICAgZGVmYXVsdF9wb29sX3NpemUgPSAyMDANCiAgICAgIG1heF9jbGllbnRfY29ubiA9IDIwMDANCiAgICAgIGlnbm9yZV9zdGFydHVwX3BhcmFtZXRlcnMgPSBleHRyYV9mbG9hdF9kaWdpdHMNCiAgICAgIHNlcnZlcl90bHNfc3NsbW9kZSA9IHByZWZlcg0KICAgICAgYXV0aF90eXBlID0gbWQ1DQogICAgICBhdXRoX2ZpbGUgPSAvZXRjL3BnYm91bmNlci91c2VybGlzdC50eHQNCiAgICAgIGFkbWluX3VzZXJzID0gcGdib3VuY2VyDQogIC0gcGF0aDogL2V0Yy9wZ2JvdW5jZXIvdXNlcmxpc3QudHh0DQogICAgcGVybWlzc2lvbnM6ICcwNjQwJw0KICAgIGNvbnRlbnQ6IHwNCiAgICAgICJwZ2JvdW5jZXIiICJTdHJvbmdQYXNzMTIzIg0KDQpydW5jbWQ6DQogIC0gY2hvd24gcGdib3VuY2VyOnBnYm91bmNlciAvZXRjL3BnYm91bmNlci91c2VybGlzdC50eHQNCiAgLSBjaG1vZCA2NDAgL2V0Yy9wZ2JvdW5jZXIvdXNlcmxpc3QudHh0DQogIC0gc3lzdGVtY3RsIGVuYWJsZSBwZ2JvdW5jZXINCiAgLSBzeXN0ZW1jdGwgcmVzdGFydCBwZ2JvdW5jZXINCg=="
  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-11-01",
      "name": "[variables('publicIpName')]",
      "location": "[parameters('region')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4"
      }
    },
    {
      "type": "Microsoft.Network/natGateways",
      "apiVersion": "2023-11-01",
      "name": "[variables('natGatewayName')]",
      "location": "[parameters('region')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIpAddresses": [
          {
            "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
          }
        ],
        "idleTimeoutInMinutes": 4
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-11-01",
      "name": "[variables('vnetName')]",
      "location": "[parameters('region')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]",
              "natGateway": {
                "id": "[resourceId('Microsoft.Network/natGateways', variables('natGatewayName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/natGateways', variables('natGatewayName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-11-01",
      "name": "[variables('nsgName')]",
      "location": "[parameters('region')]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "priority": 100,
              "access": "Allow",
              "protocol": "Tcp",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22"
            }
          },
          {
            "name": "postgres",
            "properties": {
              "priority": 110,
              "access": "Allow",
              "protocol": "Tcp",
              "direction": "Inbound",
              "sourceAddressPrefix": "10.50.0.0/16",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "5432"
            }
          },
          {
            "name": "pgbouncer",
            "properties": {
              "priority": 115,
              "access": "Allow",
              "protocol": "Tcp",
              "direction": "Inbound",
              "sourceAddressPrefix": "10.50.0.0/16",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "6432"
            }
          },
          {
            "name": "patroni",
            "properties": {
              "priority": 120,
              "access": "Allow",
              "protocol": "Tcp",
              "direction": "Inbound",
              "sourceAddressPrefix": "10.50.0.0/16",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "8008"
            }
          },
          {
            "name": "etcd",
            "properties": {
              "priority": 130,
              "access": "Allow",
              "protocol": "Tcp",
              "direction": "Inbound",
              "sourceAddressPrefix": "10.50.0.0/16",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "2379-2380"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2023-11-01",
      "name": "[variables('ilbName')]",
      "location": "[parameters('region')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "fe",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]"
              },
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('lbPrivateIP')]"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('bePoolName')]"
          }
        ],
        "probes": [
          {
            "name": "[variables('probeName')]",
            "properties": {
              "protocol": "Http",
              "port": 8008,
              "requestPath": "/primary",
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "[variables('lbruleName')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('ilbName'), 'fe')]"
              },
              "backendAddressPool": {
              "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('ilbName'), variables('bePoolName'))]"
              },
              "protocol": "Tcp",
              "frontendPort": 5432,
              "backendPort": 5432,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 30,
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('ilbName'), variables('probeName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-11-01",
      "name": "[format('{0}-elb-pip', parameters('prefix'))]",
      "location": "[parameters('region')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      },
      "condition": "[parameters('enablePublicLB')]"
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2023-11-01",
      "name": "[variables('elbName')]",
      "location": "[parameters('region')]",
      "sku": {
        "name": "Standard"
      },
      "condition": "[parameters('enablePublicLB')]",
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "fe",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-elb-pip', parameters('prefix')))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('bePoolName')]"
          }
        ],
        "probes": [
          {
            "name": "[variables('probeName')]",
            "properties": {
              "protocol": "Http",
              "port": 8008,
              "requestPath": "/primary",
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "[variables('lbruleName')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('elbName'), 'fe')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('ilbName'), variables('bePoolName'))]"
              },
              "protocol": "Tcp",
              "frontendPort": 5432,
              "backendPort": 5432,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 30,
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('ilbName'), variables('probeName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/loadBalancers', variables('ilbName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2023-11-01",
      "name": "[variables('pgbIlbName')]",
      "location": "[parameters('region')]",
      "sku": {
        "name": "Standard"
      },
      "condition": "[parameters('enablePgBouncerTier')]",
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "fe",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]"
              },
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('pgbouncerLbPrivateIP')]"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('pgbBePoolName')]"
          }
        ],
        "probes": [
          {
            "name": "[variables('pgbProbeName')]",
            "properties": {
              "protocol": "Tcp",
              "port": 6432,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "[variables('pgbRuleName')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('pgbIlbName'), 'fe')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('pgbIlbName'), variables('pgbBePoolName'))]"
              },
              "protocol": "Tcp",
              "frontendPort": 6432,
              "backendPort": 6432,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 30,
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('pgbIlbName'), variables('pgbProbeName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-11-01",
      "name": "[format('{0}-nic', variables('vmNames')[copyIndex()])]",
      "location": "[parameters('region')]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfNodes')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]"
              },
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('vmIps')[copyIndex()]]",
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('ilbName'), variables('bePoolName'))]"
                }
              ]
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
        "[resourceId('Microsoft.Network/loadBalancers', variables('ilbName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-11-01",
      "name": "[format('{0}-nic', variables('pgbVmNames')[copyIndex()])]",
      "location": "[parameters('region')]",
      "condition": "[parameters('enablePgBouncerTier')]",
      "copy": {
        "name": "pgbNicLoop",
        "count": 2
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetName'))]"
              },
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('pgbVmIps')[copyIndex()]]",
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('pgbIlbName'), variables('pgbBePoolName'))]"
                }
              ]
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
        "[resourceId('Microsoft.Network/loadBalancers', variables('pgbIlbName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-03-01",
      "name": "[variables('vmNames')[copyIndex()]]",
      "location": "[parameters('region')]",
      "zones": [
        "[variables('vmZones')[copyIndex()]]"
      ],
      "copy": {
        "name": "vmLoop",
        "count": "[parameters('numberOfNodes')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmNames')[copyIndex()]]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false
          },
          "customData": "[variables('cloudInitScript')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "0001-com-ubuntu-server-jammy",
            "sku": "22_04-lts",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            }
          },
          "dataDisks": [
            {
              "lun": 0,
              "createOption": "Empty",
              "diskSizeGB": "[parameters('dataDiskSizeGB')]",
              "managedDisk": {
                "storageAccountType": "[parameters('diskSku')]"
              }
            },
            {
              "lun": 1,
              "createOption": "Empty",
              "diskSizeGB": "[parameters('walDiskSizeGB')]",
              "managedDisk": {
                "storageAccountType": "[parameters('diskSku')]"
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmNames')[copyIndex()]))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmNames')[copyIndex()]))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-03-01",
      "name": "[variables('pgbVmNames')[copyIndex()]]",
      "location": "[parameters('region')]",
      "zones": [
        "[variables('pgbVmZones')[copyIndex()]]"
      ],
      "condition": "[parameters('enablePgBouncerTier')]",
      "copy": {
        "name": "pgbVmLoop",
        "count": 2
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D2s_v5"
        },
        "osProfile": {
          "computerName": "[variables('pgbVmNames')[copyIndex()]]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false
          },
          "customData": "[variables('pgbCloudInitScript')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "0001-com-ubuntu-server-jammy",
            "sku": "22_04-lts",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('pgbVmNames')[copyIndex()]))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('pgbVmNames')[copyIndex()]))]"
      ]
    }
  ],
  "outputs": {
    "dbIlbIP": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/loadBalancers', variables('ilbName'))).frontendIPConfigurations[0].properties.privateIPAddress]"
    },
    "elbIP": {
      "type": "string",
      "value": "[if(parameters('enablePublicLB'), reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}-elb-pip', parameters('prefix')))).ipAddress, 'disabled')]"
    },
    "pgbIlbIP": {
      "type": "string",
      "value": "[if(parameters('enablePgBouncerTier'), reference(resourceId('Microsoft.Network/loadBalancers', variables('pgbIlbName'))).frontendIPConfigurations[0].properties.privateIPAddress, 'disabled')]"
    }
  }
}